// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: similarity.proto

package similarity

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SimilarityRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ImageBase64_1 string                 `protobuf:"bytes,1,opt,name=image_base64_1,json=imageBase641,proto3" json:"image_base64_1,omitempty"`
	ImageBase64_2 string                 `protobuf:"bytes,2,opt,name=image_base64_2,json=imageBase642,proto3" json:"image_base64_2,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SimilarityRequest) Reset() {
	*x = SimilarityRequest{}
	mi := &file_similarity_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SimilarityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimilarityRequest) ProtoMessage() {}

func (x *SimilarityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_similarity_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimilarityRequest.ProtoReflect.Descriptor instead.
func (*SimilarityRequest) Descriptor() ([]byte, []int) {
	return file_similarity_proto_rawDescGZIP(), []int{0}
}

func (x *SimilarityRequest) GetImageBase64_1() string {
	if x != nil {
		return x.ImageBase64_1
	}
	return ""
}

func (x *SimilarityRequest) GetImageBase64_2() string {
	if x != nil {
		return x.ImageBase64_2
	}
	return ""
}

type SimilarityResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Similarity    float32                `protobuf:"fixed32,1,opt,name=similarity,proto3" json:"similarity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SimilarityResponse) Reset() {
	*x = SimilarityResponse{}
	mi := &file_similarity_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SimilarityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimilarityResponse) ProtoMessage() {}

func (x *SimilarityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_similarity_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimilarityResponse.ProtoReflect.Descriptor instead.
func (*SimilarityResponse) Descriptor() ([]byte, []int) {
	return file_similarity_proto_rawDescGZIP(), []int{1}
}

func (x *SimilarityResponse) GetSimilarity() float32 {
	if x != nil {
		return x.Similarity
	}
	return 0
}

var File_similarity_proto protoreflect.FileDescriptor

const file_similarity_proto_rawDesc = "" +
	"\n" +
	"\x10similarity.proto\x12\n" +
	"similarity\"_\n" +
	"\x11SimilarityRequest\x12$\n" +
	"\x0eimage_base64_1\x18\x01 \x01(\tR\fimageBase641\x12$\n" +
	"\x0eimage_base64_2\x18\x02 \x01(\tR\fimageBase642\"4\n" +
	"\x12SimilarityResponse\x12\x1e\n" +
	"\n" +
	"similarity\x18\x01 \x01(\x02R\n" +
	"similarity2i\n" +
	"\x11SimilarityService\x12T\n" +
	"\x13CalculateSimilarity\x12\x1d.similarity.SimilarityRequest\x1a\x1e.similarity.SimilarityResponseB!Z\x1fpath/to/your/package;similarityb\x06proto3"

var (
	file_similarity_proto_rawDescOnce sync.Once
	file_similarity_proto_rawDescData []byte
)

func file_similarity_proto_rawDescGZIP() []byte {
	file_similarity_proto_rawDescOnce.Do(func() {
		file_similarity_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_similarity_proto_rawDesc), len(file_similarity_proto_rawDesc)))
	})
	return file_similarity_proto_rawDescData
}

var file_similarity_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_similarity_proto_goTypes = []any{
	(*SimilarityRequest)(nil),  // 0: similarity.SimilarityRequest
	(*SimilarityResponse)(nil), // 1: similarity.SimilarityResponse
}
var file_similarity_proto_depIdxs = []int32{
	0, // 0: similarity.SimilarityService.CalculateSimilarity:input_type -> similarity.SimilarityRequest
	1, // 1: similarity.SimilarityService.CalculateSimilarity:output_type -> similarity.SimilarityResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_similarity_proto_init() }
func file_similarity_proto_init() {
	if File_similarity_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_similarity_proto_rawDesc), len(file_similarity_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_similarity_proto_goTypes,
		DependencyIndexes: file_similarity_proto_depIdxs,
		MessageInfos:      file_similarity_proto_msgTypes,
	}.Build()
	File_similarity_proto = out.File
	file_similarity_proto_goTypes = nil
	file_similarity_proto_depIdxs = nil
}
